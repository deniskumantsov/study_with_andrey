from utils.generators import generate_valid_phone_number, generate_birthday_exact_age, \
    generate_birthday_age_yesterday, generate_birthday_age_tomorrow


request_body_with_non_required = {
    "phone_number": generate_valid_phone_number(),
    "firstname": "–î–µ–Ω–∏—Å",
    "lastname": "–ö—É–º–∞–Ω—Ü–æ–≤",
    "patronymic": "–ò–≥–æ—Ä–µ–≤–∏—á",
    "birthday": "1999-09-03",
    "passport_serial": 1234,
    "passport_number": 567890,
    "password": "Qwerty!123"
}

request_body_without_non_required = {
    "phone_number": generate_valid_phone_number(),
    "firstname": "–î–µ–Ω–∏—Å",
    "lastname": "–ö—É–º–∞–Ω—Ü–æ–≤",
    "patronymic": "",
    "birthday": "1999-09-03",
    "passport_serial": 1234,
    "passport_number": 567890,
    "password": "Qwerty!123"
}

phone_number_test_data = [
    # –î–ª–∏–Ω–∞ —á–∏—Å–ª–∞
    (999999999, 422),
    (10000000000, 422),
    (-1, 422),
    (0, 422),
    (10**20, 422),


    # –°—Ç—Ä–æ–∫–∏
    ("8005553535", 422),
    ("123", 422),
    ("1234567890123", 422),
    ("80055535–∞–±", 422),
    ("80055535!-", 422),
    ("80055535@&", 422),

    # –ü—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏—è, –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
    (" ", 422),
    (" 8005553535", 422),
    ("8005553535 ", 422),
    ("800 5553535", 422),
    ("\t8005553535", 422),
    ("\n8005553535", 422),

    # –ü—É—Å—Ç–∞—è / None
    ("", 422),
    (None, 422),

    # –ë—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
    (True, 422),
    (False, 422),

    # –°–ø–∏—Å–∫–∏ –∏ —Å–ª–æ–≤–∞—Ä–∏
    ([], 422),
    ({}, 422),

    # Float
    (3.14, 422),
]

firstname_test_data = [
    # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
    ("–∞" * 1, 422),
    ("–∞" * 2, 200),
    ("–∞" * 3, 200),
    ("–∞" * 25, 200),
    ("–∞" * 254, 200),
    ("–∞" * 255, 200),
    ("–∞" * 256, 422),
    ("–∞" * 777, 422),

    # –ü—É—Å—Ç–∞—è / None
    ("", 422),
    (None, 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (123, 422),
    (3.14, 422),
    (True, 422),
    (False, 422),
    (["–õ–∏–∫–∞"], 422),
    ({"–õ–∏–∫–∞": "–î–µ–Ω–∏—Å"}, 422),

    # –î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å –¥–≤–æ–π–Ω—ã–º –∏–º–µ–Ω–µ–º
    ("–õ–∏–∫–∞-–õ–∏–∫–∞", 200),
    ("–õ–∏–∫–∞ –õ–∏–∫–∞", 200),

    # –õ–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, —Å–∏–º–≤–æ–ª—ã, —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã
    ("–õ–∏–∫–∞123", 422),
    ("–õ–∏–∫–∞!", 422),
    ("–õ–∏–∫–∞&", 422),
    ("Denis", 422),
    ("Denis123", 422),
    ("Denis!", 422),
    ("Denis&", 422),

    # –ü—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏—è, –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
    (" ", 422),
    (" –õ–∏–∫–∞", 422),
    ("–õ–∏–∫–∞ ", 422),
    ("\t–õ–∏–∫–∞", 422),
    ("–õ–∏–∫–∞\t", 422),
    ("–õ–∏\t–∫–∞", 422),
    ("\n–õ–∏–∫–∞", 422),
    ("–õ–∏–∫–∞\n", 422),
    ("–õ–∏\n–∫–∞", 422),
]

lastname_test_data = [
    # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
    ("–∞" * 1, 422),
    ("–∞" * 2, 200),
    ("–∞" * 3, 200),
    ("–∞" * 25, 200),
    ("–∞" * 254, 200),
    ("–∞" * 255, 200),
    ("–∞" * 256, 422),
    ("–∞" * 777, 422),

    # –ü—É—Å—Ç–∞—è / None
    ("", 422),
    (None, 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (123, 422),
    (3.14, 422),
    (True, 422),
    (False, 422),
    ([], 422),
    ({}, 422),

    # –î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å –¥–≤–æ–π–Ω–æ–π —Ñ–∞–º–∏–ª–∏–µ–π
    ("–ü–µ—Ç—Ä–æ–≤-–°–∏–¥–æ—Ä–æ–≤", 200),
    ("–ü–µ—Ç—Ä–æ–≤ –°–∏–¥–æ—Ä–æ–≤", 200),

    # –õ–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, —Å–∏–º–≤–æ–ª—ã
    ("–ü–µ—Ç—Ä–æ–≤123", 422),
    ("–ü–µ—Ç—Ä–æ–≤!", 422),
    ("–ü–µ—Ç—Ä–æ–≤&", 422),
    ("Petrov", 422),
    ("Petrov123", 422),
    ("Petrov!", 422),
    ("Petrov&", 422),

    # –ü—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏—è, –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
    (" ", 422),
    (" –ü–µ—Ç—Ä–æ–≤", 422),
    ("–ü–µ—Ç—Ä–æ–≤ ", 422),
    ("\t–ü–µ—Ç—Ä–æ–≤", 422),
    ("–ü–µ—Ç—Ä–æ–≤\t", 422),
    ("–ü–µ—Ç\t—Ä–æ–≤", 422),
    ("\n–ü–µ—Ç—Ä–æ–≤", 422),
    ("–ü–µ—Ç—Ä–æ–≤\n", 422),
    ("–ü–µ—Ç\n—Ä–æ–≤", 422),
]

patronymic_test_data = [
    # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
    ("–∞" * 1, 422),
    ("–∞" * 2, 200),
    ("–∞" * 3, 200),
    ("–∞" * 25, 200),
    ("–∞" * 254, 200),
    ("–∞" * 255, 200),
    ("–∞" * 256, 422),
    ("–∞" * 777, 422),

    # –ü—É—Å—Ç–∞—è / None
    ("", 200),
    (None, 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (123, 422),
    (3.14, 422),
    (True, 422),
    (False, 422),
    ([], 422),
    ({}, 422),

    # –õ–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, —Å–∏–º–≤–æ–ª—ã
    ("–ò–≥–æ—Ä–µ–≤–∏—á123", 422),
    ("–ò–≥–æ—Ä–µ–≤–∏—á!", 422),
    ("–ò–≥–æ—Ä–µ–≤–∏—á&", 422),
    ("Igor", 422),
    ("Igor123", 422),
    ("Igor!", 422),
    ("Igor&", 422),

    # –ü—Ä–æ–±–µ–ª—ã, —Ç–∞–±—É–ª—è—Ü–∏—è, –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
    (" ", 422),
    (" –ò–≥–æ—Ä–µ–≤–∏—á", 422),
    ("–ò–≥ –æ—Ä", 422),
    ("–ò–≥–æ—Ä ", 422),
    ("\t–ò–≥–æ—Ä–µ–≤–∏—á", 422),
    ("–ò–≥–æ—Ä–µ–≤–∏—á\t", 422),
    ("–ò\t–≥–æ—Ä", 422),
    ("\n–ò–≥–æ—Ä–µ–≤–∏—á", 422),
    ("–ò–≥–æ—Ä–µ–≤–∏—á\n", 422),
    ("–ò\n–≥–æ—Ä", 422),
]

birthday_test_data = [
    # –ü—É—Å—Ç—ã–µ / None
    (None, 422),
    ("", 422),

    (generate_birthday_age_yesterday(16), 200),   # –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 16 –≤—á–µ—Ä–∞
    (generate_birthday_exact_age(16), 200),       # —Ä–æ–≤–Ω–æ 16 —Å–µ–≥–æ–¥–Ω—è
    (generate_birthday_age_tomorrow(16), 422),    # –∑–∞–≤—Ç—Ä–∞ 16
    (generate_birthday_exact_age(17), 200),       # 17 –ª–µ—Ç
    (generate_birthday_exact_age(100), 422),      # 100 –ª–µ—Ç

    ("1999-09-03!", 422),
    ("1999-09-0!", 422),
    ("1999-09-03&", 422),
    ("1999-09-03–∞–∞–∞", 422),
    ("1999-0–∞–∞–∞", 422),
    ("1999.09.03", 422),
    ("1999/09/03", 422),
    ("1999&09&03", 422),
    ("0000-00-00", 422),
    ("2020-00-12", 422),
    ("2021-12-00", 422),
    ("0000-01-12", 422),
    ("1970-01-01", 200),
    ("9999-99-99", 422),
    ("9999-12-01", 422),
    ("2000-99-01", 422),
    ("2000-12-99", 422),
    ("2000-02-31", 422),
    ("2000-12-32", 422),
    ("2099-12-12", 422),

    ("2008-02-29", 200),  # –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥, —Ä–æ–≤–Ω–æ 17 –ª–µ—Ç
    ("2009-02-28", 200),  # 16 –ª–µ—Ç, 28 —Ñ–µ–≤—Ä–∞–ª—è
    ("2009-02-29", 422),  # –Ω–µ–≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥, 28 –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
    ("2008-04-30", 200),  # 30 –∞–ø—Ä–µ–ª—è
    ("2008-03-31", 200),  # 31 –º–∞—Ä—Ç–∞
    ("2008-04-31", 422),  # 31 –∞–ø—Ä–µ–ª—è, –≤ —ç—Ç–æ–º –≥–æ–¥—É 30 –¥–Ω–µ–π –≤ –∞–ø—Ä–µ–ª–µ.

    (" ", 422),
    (" 1999-09-03", 422),
    ("1999-09-03 ", 422),
    ("1999- 09-03", 422),
    ("\t1999-09-03", 422),
    ("1999-09-03\t", 422),
    ("1999-\t09-03", 422),
    ("\n1999-09-03", 422),
    ("1999-09-03\n", 422),
    ("1999-\n09-03", 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (123, 422),
    (3.14, 422),
    (True, 422),
    (False, 422),
    ([], 422),
    ({}, 422),
]

passport_serial_test_data = [
    # –í–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    ("0000", 200),
    ("1234", 200),
    ("9999", 200),

    # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
    ("1", 422),
    ("12", 422),
    ("123", 422),
    ("12345", 422),
    ("1" * 100, 422),

    # –ü—É—Å—Ç–æ–µ / None
    ("", 422),
    (None, 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (1234, 422),
    (3.14, 422),
    (True, 422),
    (False, 422),
    ([], 422),
    ({}, 422),

    ("123–±", 422),
    ("abcd", 422),
    ("123!", 422),
    ("123&", 422),
    (" ", 422),
    (" 123", 422),
    ("123 ", 422),
    ("12 3", 422),
    ("\t1234", 422),
    ("1234\t", 422),
    ("12\t34", 422),
    ("\n1234", 422),
    ("1234\n", 422),
    ("12\n34", 422),

    # –ì—Ä–∞–Ω–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    ("0001", 200),
    ("9998", 200),
    ("10000", 422),
]

passport_number_test_data = [
    # –í–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    ("000000", 200),
    ("123456", 200),
    ("999999", 200),

    # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
    ("1", 422),
    ("12", 422),
    ("123", 422),
    ("1234", 422),
    ("12345", 422),
    ("1234567", 422),
    ("1" * 100, 422),

    # –ü—É—Å—Ç–æ–µ / None
    ("", 422),
    (None, 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (123456, 422),
    (3.14567, 422),
    (True, 422),
    (False, 422),
    ([], 422),
    ({}, 422),

    # –ù–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    ("12345–±", 422),
    ("12345!", 422),
    ("12345&", 422),
    ("1234ab", 422),
    ("12$456", 422),
    (" ", 422),
    (" 12345", 422),
    ("12345 ", 422),
    ("12 345", 422),
    ("\t123456", 422),
    ("123456\t", 422),
    ("12\t3456", 422),
    ("\n123456", 422),
    ("123456\n", 422),
    ("12\n3456", 422),

    # –ì—Ä–∞–Ω–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    ("000001", 200),
    ("999998", 200),
    ("1000000", 422),
]

password_test_data = [
    # –í–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
    ("Password1!@", 200),
    ("A1b2C#3d4&", 200),
    ("Pass1@word.com", 200),
    ("PASSWORD1!", 200),

    # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ 9
    ("P1!", 422),
    ("Pass1$", 422),
    ("Abc1&", 422),
    ("A1b2c3$", 422),
    ("A1&" + "a" * 254, 422),
    ("A1&" + "a" * 255, 422),
    ("A1&" + "a" * 256, 422),
    ("A1&" + "a" * 777, 422),

    # –ù–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
    ("Password1", 422),

    # –ù–µ—Ç —Ü–∏—Ñ—Ä
    ("Password", 422),

    # –ù–µ—Ç –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤
    ("password1&", 422),

    # –ö–∏—Ä–∏–ª–ª–∏—Ü–∞
    ("–ü–∞—Ä–æ–ª—å1!&", 422),

    # –ü—É—Å—Ç–æ–µ / None
    ("", 422),
    (None, 422),

    # –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö
    (123456789, 422),
    (3.14159265, 422),
    (True, 422),
    (False, 422),
    ([], 422),
    ({}, 422),

    (" ", 422),
    (" A1b2c3d4&", 200),
    ("A1b2c3d4& ", 200),
    ("A1b2 c3d4&", 200),
    ("\tA1b2c3d4&", 422),
    ("A1b2c3d4&\t", 422),
    ("A1b2c\t3d4&", 422),
    ("\nA1b2c3d4&", 422),
    ("A1b2c3d4&\n", 422),
    ("A1b2\nc3d4&", 422),
    ("\rA1b2c3d4&", 422),
    ("A1b2c3d4&\r", 422),
    ("\vA1b2c3d4&", 422),
    ("A1b2c3d4&\v", 422),

    ("PÊ±âÂ≠ósword1&!", 422),
    ("Password1&!üòä", 422),
    ("P√§ssword1&!", 422),

    ("P&ass1!'; DROP TABLE users; --", 422),
    ("P&ass1!<script>alert('xss')</script>", 422),
    ("P&ass1! OR 1=1", 422),
]